group 'org.zhong'
version '1.0-SNAPSHOT'
ext.sourceCompatibility = org.gradle.api.JavaVersion.VERSION_1_8
ext.targetCompatibility = org.gradle.api.JavaVersion.VERSION_1_8
//sourceCompatibility = 1.8
//targetCompatibility = 1.8
buildscript{
    repositories {
//        jcenter()
        // enable this to use snapshot versions of Gretty:
        maven {
            url "http://192.168.3.22:8081/nexus/content/repositories/central/"

        }
    }
    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}
apply plugin: 'java'
apply plugin: 'war'
apply plugin: "idea"
apply plugin: 'org.akhikhl.gretty'
//apply plugin: 'pmd'
//apply plugin: 'findbugs'

repositories {
    maven {
        url "http://192.168.3.22:8081/nexus/content/repositories/central/"
    }
}


dependencies {
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'

    compile group: 'org.springframework', name: 'spring-core', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-aspects', version: '4.3.2.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-aop', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-tx', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-orm', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-test', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-expression', version: '4.3.1.RELEASE'

    compile group: 'com.alibaba', name: 'druid', version: '+'

    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.1.Final'
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.2.1.Final'
    compile group: 'org.hibernate', name: 'hibernate-ehcache', version: '5.2.1.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.2.1.Final'

    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.2'

    compile group: 'org.apache.struts', name: 'struts2-core', version: '2.5.2'
    compile group: 'org.apache.struts', name: 'struts2-spring-plugin', version: '2.5.2'
    compile group: 'org.apache.struts', name: 'struts2-json-plugin', version: '2.5.2'
    compile group: 'org.apache.struts', name: 'struts2-convention-plugin', version: '2.5.2'

    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.38'

    compile group: 'com.google.code.findbugs', name: 'findbugs', version: '3.0.1'

    testCompile group: 'junit', name: 'junit', version:'+'
}
gretty{
    httpPort = 8080
    contextPath = '/'
    servletContainer = 'jetty9'
}

task findbugs(type:FindBugs){
    source 'src'
    include '**/*.java'
    excludeFilter = file("${rootProject.projectDir}/src/main/resources/findbugs-filter.xml")
    classes = fileTree("${project.rootDir}/build/classes")
    reportLevel = 'low'
    effort = 'max'
    ignoreFailures true
    reports {
        xml.enabled = false
        html.enabled = true
        xml.destination = "$project.buildDir/reports/findbugs/findbugs-output.xml"
        html.destination = "$project.buildDir/reports/findbugs/findbugs-output.html"
    }
    classpath = files()
}



//task depOnStart(type:Copy,dependsOn:war) {
////    println war.archiveName
////    println war.archivePath
////    println war.baseName
////    println war.metadataCharset
//    from war.archivePath
//    into "${tomcat_home}/webapps"
//
//}

//task startT(type: Exec){
////    workingDir tomcat_bin
//    commandLine 'cmd','c',tomcat_start
//    standardOutput = new ByteArrayOutputStream()
//    ext.output = {
//        return standardOutput.toString()
//    }
//}

//pmd{
//
//}
